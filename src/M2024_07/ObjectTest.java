package M2024_07;

import M2024_01.Calculator;

/**
 * 클래스, 객체, new 연산자, 클래스 변수, 인스턴스, 클래스 멤버
 * 
 * @author PigYoung90 객체 (Object) 물리적으로 존재하거나 추상적으로 생각할 수 있는 것 중에서 자신의 속성을 가지며
 *         식별 가능한 것 속성 (필드(field)) + 동작(메소드(method))로 구성 객체와 객체 간의 상호작용 메소드를 통해
 *         객체들이 상호작용 메소드 호출 : 객체가 다른 객체의 기능을 이용하는 것
 */
public class ObjectTest {

	public static void main(String[] args) {
		int result = Calculator.add(10, 20);
		
//		객체 간의 관계
//		집합 관계
//		부품과 완성품의 관계
//		사용 관계
//		객체 간의 상호작용
//		상속 관계
//		상위(부모) 객체를 기반으로 
//		하위(자식) 객체를 생성
//		객체 지향 프로그래밍
//		집합/사용 관계에 있는 객체를 하나씩 설계한 후 조립하여 프로그램 개발
//		클래스 (class)
//		자바의 설계도
//		인스턴스 (instance): 클래스로부터 만들어진 객체
//		객체지향 프로그래밍 단계
//		클래스 설계 -> 설계된 클래스로 사용할 객체 생성 -> 객체 이용
//		클래스 선언
//		객체 구상 후 클래스 이름을 결정
//		식별자 작성 규칙에 따라야 함
//		하나 이상의 문자로 이루어질 것
//		첫 글자에는 숫자 올 수 없음
//		$, _ 외의 특수 문자는 사용할 수 없음
//		자바 키워드는 사용할 수 없음
//		클래스로부터 객체를 생성
//		new 클래스();
//		new 연산자로 메모리 힙 영역에 객체 생성
//		객체 생성 후 객체 번지가 리턴
//		클래스 변수에 저장하여 변수 통해 객체 사용 가능
//		클래스 변수;
//		변수 = new 클래스();

		




	}

}
